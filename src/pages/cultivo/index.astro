---
import Layout from '../../layouts/Layout.astro';
import { supabase } from '../../lib/supabase';
import { authenticate } from '../../lib/auth';
import CreateCultivo from '../../components/cultivos/CreateCultivo.astro';
// Autenticar al usuario sin redireccionar
const { user, redirect } = await authenticate(Astro);
if (redirect) {
    return Astro.redirect(redirect);
}

// Obtener los datos del código QR asociados al usuario (solo si está autenticado)
let cultivos_data = [];
if (user) {
  const { data } = await supabase
    .from("cultivos")
    .select("*")
    .eq("uuid", user.id);
  cultivos_data = data || [];
}

const cultivosCount = cultivos_data.length;

---

<Layout title="Cultivos">
    <!-- Search and Session List -->
<div class="relative space-y-4">
    <!-- Add Session Button -->
     <div class="absolute top-0 right-0 flex items-center justify-center gap-1 bg-custom-green hover:bg-green-600 text-white font-medium text-sm rounded transition-colors">
     <CreateCultivo />
    </div>
    
   
  
    <!-- Search Bar -->
    <div class="mb-2">
      <input
        id="search-input"
        type="text"
        placeholder="Buscar sesiones..."
        class="px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-green-500"
      />
    </div>
  
    <div class="session-count">
      <p class="text-lg font-semibold">
        Total de cultivos: <span class="text-green-500">{cultivosCount}</span>
      </p>
    </div>
    
  
    <ul class="space-y-4">
        {cultivos_data.map((cultivo) => (
            <li key={cultivo.id} class="bg-white p-4 rounded-lg shadow-md hover:shadow-lg transition-shadow">
                <div class="flex justify-between items-center">
                    <a href={`/cultivo/${cultivo.id}`} class="text-lg font-medium text-gray-800 hover:text-custom-green transition-colors">
                        Cultivo: {cultivo.id}
                    </a>
                    <button
                        onclick={`eliminarRegistro('${cultivo.id}')`}
                        class="bg-red-500 hover:bg-red-600 text-white px-3 py-1 rounded-md text-sm transition-colors"
                    >
                        Eliminar
                    </button>
                </div>
            </li>
        ))}
    </ul>
  
  </div>
  
  <script is:inline>
  
    // Get DOM elements
  
    const searchInput = document.getElementById('search-input');
    const sessionList = document.getElementById('session-list');
    const sessions = [...sessionList.querySelectorAll('li')];
  
    // Filter sessions on search input
    searchInput.addEventListener('input', (e) => {
      const query = e.target.value.toLowerCase();
  
      sessions.forEach((session) => {
        const sessionName = session.getAttribute('data-session-name');
        session.style.display = sessionName.includes(query) ? 'block' : 'none';
      });
    });
  
    async function eliminarRegistro(sessionId) {
        if (!confirm('¿Estás seguro de que deseas eliminar este cultivo?')) return;

        try {
            const response = await fetch(`/api/cultivos/crear-cultivo?id=${sessionId}`, {
                method: 'DELETE'
            });

            const result = await response.json();
            if (result.success) {
                const elementToRemove = document.querySelector(`li[key="${sessionId}"]`);
                if (elementToRemove) {
                    elementToRemove.remove();
                    // Actualizar el contador de cultivos
                    const countElement = document.querySelector('.text-green-500');
                    const currentCount = parseInt(countElement.textContent);
                    countElement.textContent = currentCount - 1;
                }
            } else {
                alert('Error: ' + result.error);
            }
        } catch (error) {
            alert('Error de red: ' + error.message);
        }
    }
  </script>
    


    </div>
</Layout>