---
import { authenticate } from "../../../lib/auth";
import Layout from "../../../layouts/DashboardLayout.astro";
import { supabase } from "../../../lib/supabase";
import PostFooter from "../../../components/comunidad/PostFooter";
import CommentSection from "../../../components/comunidad/CommentSection";

// Obtener el ID del post de los parámetros
const { id } = Astro.params;

// Autenticar al usuario
const { user, redirect } = await authenticate(Astro);
if (redirect) {
    return Astro.redirect(redirect);
}

// Obtener el post específico
const { data: post } = await supabase
  .from("comunidad")
  .select("*")
  .eq("id", id)
  .single();

if (!post) {
  return Astro.redirect("/comunidad");
}

// Verificar si el usuario ha dado like al post
const { data: userLike } = await supabase
  .from("post_likes")
  .select("*")
  .eq("post_id", id)
  .eq("user_id", user.id)
  .single();

const hasLiked = !!userLike;


---

<Layout title={post.title || "Post - Farmiemos"}>
  <div class="max-w-4xl mx-auto px-4 py-8">
    <article class="bg-white rounded-lg shadow-md overflow-hidden">
      <div class="p-6">
        <h1 class="text-3xl font-bold mb-4">{post.title}</h1>
        <div class="text-gray-600 mb-6">
          {new Date(post.created_at).toLocaleDateString()}
        </div>
        
        <div class="prose max-w-none">
          {post.type === 'texto' && <p>{post.content}</p>}
          {post.type === 'multimedia' && (
            <img src={post.media_url} alt={post.title} class="w-full rounded-lg" />
          )}
          {post.type === 'enlace' && (
            <a href={post.link_url} target="_blank" rel="noopener noreferrer" 
               class="text-blue-600 hover:underline">
              {post.link_url}
            </a>
          )}
          {post.type === 'encuesta' && (
            <div>
              <h3 class="font-medium mb-4">{post.poll_question}</h3>
              <div class="space-y-2">
                {post.poll_options?.split(',').map((option) => (
                  <button class="w-full p-3 text-left border rounded-lg hover:bg-gray-50">
                    {option.trim()}
                  </button>
                ))}
              </div>
            </div>
          )}
        </div>
      </div>
      
      <PostFooter 
        client:load 
        postId={post.id} 
        initialLikesCount={post.likes_count} 
        commentsCount={post.comments_count}
        initialIsLiked={hasLiked}
      />
    </article>
    <div id="comments">
      <h2 class="text-2xl font-bold mb-4">Comentarios</h2>
      <CommentSection 
        client:load 
        postId={post.id} 
        initialComments={post.comments || []}
      />
    </div>
  </div>
</Layout>
