---
import BaseHead from '../components/BaseHead.astro';
import '../styles/global.css';
import { authenticate } from '../lib/auth';
import { supabase } from '../lib/supabase';

const { user } = await authenticate(Astro);

const { title, description, qr, id } = Astro.props;
const avatarUrl = user?.user_metadata.avatar_url;


const { data: strain } = await supabase
    .from("strains")
    .select("*")
    .eq("qr_id", qr)
    .eq("id", id);


---

<!DOCTYPE html>
<html lang="es">
  <head>
    <BaseHead title={title} description={description} />
  </head>
  <body>
    <div class="min-h-screen flex flex-col bg-gray-50">
      <header class="flex items-center justify-between bg-white px-4 py-2 shadow sticky top-0 z-10 ">
        <!-- Logo -->
        <div class="flex items-center">
          <a href="/" class="flex items-center">
            <img src="/logo.png" alt="Farmiemos" class="h-10 w-10">
          </a>
        </div>
        
        {user ? (
          <!-- User Menu -->
          <div class="relative">
            <!-- Avatar Button -->
            <button id="userMenuButton" class="flex items-center justify-center w-10 h-10 rounded-full  focus:outline-none focus:ring-2 focus:ring-gray-400">
              <img 
                src={avatarUrl}
                alt="User Avatar" 
                class="h-8 w-8 rounded-full"
              />
            </button>
            
            <!-- Dropdown Menu -->
            <div id="userMenu" class="hidden absolute right-0 mt-2 w-48 bg-white rounded-lg shadow-lg border border-gray-200 z-50">
              <div class="py-1">
                <a href="/dashboard" class="block px-4 py-2 text-gray-700 hover:bg-gray-100">🏠 Dashboard</a>
                <a href="/profile" class="block px-4 py-2 text-gray-700 hover:bg-gray-100">⚙️ Configuracion</a>
                <form action="/api/auth/signout">
                  <button type="submit" class="block w-full px-4 py-2 bg-custom-red text-white rounded-md">Salir</button>
                </form>
              </div>
            </div>
          </div>
        ) : (
          <!-- Register Button -->
          <a href="/register" class="bg-blue-500 text-white px-4 py-2 rounded-md hover:bg-blue-600">
            Registrarse
          </a>
        )}
      </header>
      

        <slot />

        <footer class="fixed bottom-0 left-0 right-0 bg-white border-t border-gray-200 shadow-lg backdrop-blur-sm bg-opacity-90 z-50">
          <nav class="flex justify-around items-center py-3">
            <!-- Botón Inicio -->
            <a 
              href="/" 
              class="flex flex-col items-center space-y-1 text-gray-600 hover:text-custom-blue transition-colors"
              aria-current={Astro.url.pathname === '/' ? 'page' : undefined}
            >
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"/>
              </svg>
              <span class="text-xs font-medium">Inicio</span>
            </a>
        
            <!-- Botón Catálogo -->
            <a 
              href="/catalog" 
              class="flex flex-col items-center space-y-1 text-gray-600 hover:text-custom-green transition-colors"
              aria-current={Astro.url.pathname === '/catalog' ? 'page' : undefined}
            >
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"/>
              </svg>
              <span class="text-xs font-medium">Catálogo</span>
            </a>
        
            <!-- Botón Central con énfasis -->
            <a 
              href={`/qr/`} 
              class="flex items-center justify-center -mt-8 bg-gradient-to-br from-custom-green to-custom-blue text-white rounded-full p-4 shadow-lg hover:shadow-xl transition-all"
            >
              <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v1m6 11h2m-6 0h-2v4m0-11v3m0 0h.01M12 12h4.01M16 20h4M4 12h4m12 0h.01M5 8h2a1 1 0 001-1V5a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1zm12 0h2a1 1 0 001-1V5a1 1 0 00-1-1h-2a1 1 0 00-1 1v2a1 1 0 001 1zM5 20h2a1 1 0 001-1v-2a1 1 0 00-1-1H5a1 1 0 00-1 1v2a1 1 0 001 1z"/>
              </svg>
            </a>
        
            <!-- Botón Favoritos -->
            <a 
              href="/favorites" 
              class="flex flex-col items-center space-y-1 text-gray-600 hover:text-custom-pink transition-colors"
              aria-current={Astro.url.pathname === '/favorites' ? 'page' : undefined}
            >
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"/>
              </svg>
              <span class="text-xs font-medium">Favoritos</span>
            </a>
        
            <!-- Botón Perfil -->
            <a 
              href="/profile" 
              class="flex flex-col items-center space-y-1 text-gray-600 hover:text-custom-purple transition-colors"
              aria-current={Astro.url.pathname === '/profile' ? 'page' : undefined}
            >
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
              </svg>
              <span class="text-xs font-medium">Perfil</span>
            </a>
          </nav>
        </footer>

    </div>

    <script is:inline>
      // Esperar a que el DOM esté listo
      document.addEventListener('DOMContentLoaded', () => {
        const userMenuButton = document.getElementById('userMenuButton');
        const userMenu = document.getElementById('userMenu');
        let isMenuOpen = false;

        // Función para abrir/cerrar el menú
        const toggleMenu = (event) => {
          event.stopPropagation();
          isMenuOpen = !isMenuOpen;
          
          if (isMenuOpen) {
            userMenu.classList.remove('hidden');
            // Añadir una pequeña animación de fade
            userMenu.style.opacity = '0';
            setTimeout(() => {
              userMenu.style.opacity = '1';
              userMenu.style.transition = 'opacity 150ms ease-in-out';
            }, 0);
          } else {
            userMenu.style.opacity = '0';
            setTimeout(() => {
              userMenu.classList.add('hidden');
            }, 150);
          }
        };

        // Event listener para el botón
        userMenuButton.addEventListener('click', toggleMenu);

        // Cerrar el menú cuando se hace clic fuera
        document.addEventListener('click', (event) => {
          if (isMenuOpen && !userMenu.contains(event.target) && event.target !== userMenuButton) {
            toggleMenu(event);
          }
        });

        // Cerrar el menú con la tecla Escape
        document.addEventListener('keydown', (event) => {
          if (event.key === 'Escape' && isMenuOpen) {
            toggleMenu(event);
          }
        });
      });
    </script>
  </body>
</html>