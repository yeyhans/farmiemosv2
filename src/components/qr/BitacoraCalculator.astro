---
import { authenticate } from "../../lib/auth";


const { user, redirect } = await authenticate(Astro);
if (redirect) {
    return Astro.redirect(redirect);
}



const { id, strain, qr } = Astro.props;

console.log(id);




---
    

    <!-- Formulario de Entrada -->
    <form id="calculator-form" class="space-y-4">

        <input class="hidden" id="strain_id" name="strain_id" value={id} />
        <input class="hidden" id="qr_id" name="qr_id" value={qr} />

        <div class="space-y-4">
            <div class="text-center flex flex-col sm:flex-row sm:space-x-8 sm:items-center justify-center">
                <!-- Campo de temperatura -->
                <div class="flex flex-col items-center space-y-2">
                    <label for="tempInput" class="block text-sm font-medium text-gray-700">
                        üå°Ô∏è (¬∞C)
                    </label>
                    <input
                        type="number"
                        id="tempInput"
                        name="temp"
                        class="mt-1 block rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm"
                        placeholder="Introduce la temperatura"
                        oninput="calcularValores()" 
                    />
                </div>
        
                <!-- Campo de humedad -->
                <div class="flex flex-col items-center space-y-2">
                    <label for="humInput" class="block text-sm font-medium text-gray-700">
                        üíß (%)
                    </label>
                    <input
                        type="number"
                        id="humInput"
                        name="humidity"
                        class="mt-1 block rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm"
                        placeholder="Introduce la humedad relativa"
                        oninput="calcularValores()"
                    />
                </div>
            </div>
        
            <div class="flex">
                <label for="notesInput" class="text-sm font-medium text-gray-700">
                    Notas:
                </label>
                <textarea
                    id="notesInput"
                    name="notes"
                    class="block text-black rounded-md border-gray-300 shadow-sm focus:border-green-500 focus:ring-green-500 sm:text-sm"
                    placeholder="Introduce tus notas"
                    rows="2">
                </textarea>
            </div>


            
        </div>
        
        

            <!-- Resultados -->
    <div class="grid grid-cols-2 gap-4 mt-4">
        <div class="bg-blue-100 p-4 rounded-lg text-center">
            
            <h2 class="text-sm font-semibold">VPD üí®</h2>
            <p class="text-xs font-bold text-blue-700" id="vpdResult">
                0.00 <span class="text-xs font-bold text-custom-black">kPa</span>
            </p>
        </div>

        <div class="bg-green-100 p-4 rounded-lg text-center">
            <h2 class="text-sm font-semibold">Dewpoint üå°Ô∏è</h2>
            <p class="text-xs font-bold text-blue-700" id="dewpointResult">
                0.00 <span class="text-xs font-bold text-custom-black">¬∞C</span>
            </p>
        </div>
    </div>
               
    <div class="flex gap-2">
        <!-- Add Session Button -->
  <!-- Bot√≥n para registrar valores -->
  <button type="button" onclick="registrarValores()"
    class="flex items-center justify-center gap-1 bg-custom-green hover:bg-green-600 text-white font-medium text-sm py-2 px-3 rounded transition-colors"
  >
    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 4v16m8-8H4" />
    </svg>
    Registrar Notas
  </button>

  <button 
    id="openPopupBtn"
    type="button" 
    class="flex items-center justify-center gap-1 bg-custom-yellow hover:bg-yellow-600 text-white font-medium text-sm py-2 px-3 rounded transition-colors"
    onclick="mostrarPopUp()">
    <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 12h.01M12 12h.01M19 12h.01M6 12a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0zm7 0a1 1 0 11-2 0 1 1 0 012 0z" />
      </svg>
      Ver m√°s
    </button>



      </div>
    </form>
    

   
                <div class="mt-2 p-2 border rounded-lg shadow-md bg-gray-50">
          <h3 class="text-lg font-medium text-gray-800">üìà Vincula aqu√≠ tu dispositivo ioT</h3>
          <p class="text-sm text-gray-600">Vincula tu dispositivo Tuya asociados a nuestras API y descubre todos los beneficios de la AI.</p>
          <a href="/iot" class="text-white mt-2">
            <p class="text-sm text-center text-green-900">¬°Descubre m√°s haciendo click aqu√≠!</p>
          </a>

        </div>
    


<script is:inline>


    function calcularValores() {
        const temp = parseFloat(document.getElementById('tempInput').value);
        const hum = parseFloat(document.getElementById('humInput').value);

        if (isNaN(temp) || isNaN(hum) || hum < 0 || hum > 100) {
            return;
        }

        const a = 17.27, b = 237.7;
        const alpha = ((a * temp) / (b + temp)) + Math.log(hum / 100);
        const dewpoint = (b * alpha) / (a - alpha);
        const es = 0.6108 * Math.exp((a * temp) / (b + temp));  
        const ea = es * (hum / 100);                             
        const vpd = es - ea;      
        

        document.getElementById('vpdResult').textContent = vpd.toFixed(2);
        document.getElementById('dewpointResult').textContent = dewpoint.toFixed(2);
  
    }
    
    async function registrarValores() {
        const notes = document.getElementById('notesInput').value.trim();
        const temp = parseFloat(document.getElementById('tempInput').value);
        const hum = parseFloat(document.getElementById('humInput').value);
        const vpd = parseFloat(document.getElementById('vpdResult').textContent);
        const dewpoint = parseFloat(document.getElementById('dewpointResult').textContent);
        const strainId = document.getElementById('strain_id').value;
        const qrId = document.getElementById('qr_id').value; 

        const formData = new FormData();
        formData.append('strain_id', strainId);
        formData.append('qr_id', qrId);
        formData.append('temp', temp.toFixed(2));
        formData.append('humidity', hum.toFixed(2));
        formData.append('vpd', vpd.toFixed(2));
        formData.append('dewpoint', dewpoint.toFixed(2));
        formData.append('notes', notes);

 

        try {
            const response = await fetch('/api/qr/calculator-bitacora', {
                method: 'POST',
                body: formData,
            });
            const result = await response.json();
            if (result.success) {
 
                alert('Datos registrados exitosamente.');
                location.reload();
                return true;
            } else {
                alert('Error: ' + result.error);
                console.error("Error al registrar los valores.");
                return false;
            }
        } catch (error) {
            alert('Error de red: ' + error.message);
            return false;
        }
    }

    async function eliminarRegistro(qr, id, timestamp) {
        if (!confirm('¬øEst√°s seguro de que deseas eliminar este registro?')) return;

        try {
            const response = await fetch(`/api/qr/calculator-bitacora`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ qr, id, timestamp }),
            });
            const result = await response.json();
            if (result.success) {
                console.log('Registro eliminado exitosamente.' + id);
                location.reload();
            } else {
                alert('Error: ' + result.error);
            }
        } catch (error) {
            alert('Error de red: ' + error.message);
        }
    }
</script>

<!-- PopUp (oculto por defecto) -->
<div 
    id="popupContainer" 
    class="fixed inset-0 top-8 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
    
    <div class="bg-white rounded-lg p-4 shadow-lg max-w-lg w-full relative">
        <!-- Bot√≥n de Cierre -->
        <button 
            class="absolute top-2 right-2 text-red-600 hover:text-red-800 focus:outline-none"
            onclick="cerrarPopUp()">
            <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
              </svg>
        </button>
        
        <!-- Contenido del PopUp -->
        <div class="p-4">
            <h2 class="text-lg font-semibold mb-2">¬øNecesitas ayuda?</h2>
            <p class="text-sm">¬°Estamos aqui para ayudarte! Ponte en contacto con nuestro equipo de expertos para obtener asesoramiento personalizado.</p>
            <p class="text-sm"></p>
            <div class="flex gap-2">

                <a href="">
                    <button type="button" class="flex items-center justify-center gap-1 bg-custom-blue  text-white font-medium text-sm py-2 px-3 rounded transition-colors"
                  >
                  ü§ñ Interpretar
                  </button></a> 
      
                  <a href="/grow/visualizacion">
            <button type="button" class="flex items-center justify-center gap-1 bg-custom-greey  text-white font-medium text-sm py-2 px-3 rounded transition-colors"
          >
            üöÄ Visualizaci√≥n
          </button></a>  
          
          <a href="https://wa.me/56981570958?text=Estamos%20aqu√≠%20para%20ayudarte,%20cualquier%20duda%20que%20tengas%20con%20respecto%20a%20Farmiemos%20y%20nuestros%20productos%20o%20servicios%20solo%20cont√°ctese">
            <button 
        type="button" 
        class="flex items-center justify-center gap-1 bg-custom-green text-white font-medium text-sm py-2 px-3 rounded transition-colors">
        üìû Contactanos
        </button>
    </a>
    
        
        
              </div>
            
        </div>
    </div>
</div>

<script is:inline>
    // Mostrar el PopUp
    function mostrarPopUp() {
        document.getElementById('popupContainer').classList.remove('hidden');
    }

    // Ocultar el PopUp
    function cerrarPopUp() {
        document.getElementById('popupContainer').classList.add('hidden');
    }
</script>